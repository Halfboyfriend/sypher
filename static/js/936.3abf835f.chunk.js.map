{"version":3,"file":"static/js/936.3abf835f.chunk.js","mappings":"4LAKA,MAAM,OAAEA,GAAWC,EAAQ,MAoH3B,QAzGA,WACE,MAAOC,EAAMC,IAAcC,EAAAA,EAAAA,WAAS,IAC7BC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,IAC5BK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,OAC1BO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,MAiC3C,OACES,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,KAEfD,EAAAA,EAAAA,KAAA,WAASE,UAAU,OAAMH,UACvBC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIG,MAAO,CAAEC,SAAU,QAASL,SAAC,iCAIpCV,GAAUE,GACTS,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAN,SACGV,GACCW,EAAAA,EAAAA,KAAA,WAASE,UAAU,OAAMH,UACvBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,SAAO,EAACC,QAAStB,EAAMuB,QA9C7C,WACEtB,GAAW,GACX,MAAMuB,EAAW1B,EAAO2B,OAAOC,eAAeF,SAASG,OACvDnB,EAAQgB,GACRvB,GAAW,EACb,EAyC+DY,SAAC,yBAIlDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,UAITO,EAAAA,EAAAA,KAAA,WAASE,UAAU,GAAEH,UACnBC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMiB,SA1CpB,SAAmBC,GACjBC,QAAQC,IAAItB,GAEZoB,EAAEG,iBACF,IACElC,EAAOmC,MAAMC,OAAOC,eAAe1B,GACnC2B,EAAAA,GAAMC,QAAQ,sBAClB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,qBACZR,QAAQC,IAAIO,EAEd,CAIA,EA2BwCzB,SAAA,EACxBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CACPtB,MAAO,CACLuB,MAAO,OACPC,OAAQ,QACRC,QAAS,MACTxB,SAAU,OACVyB,OAAQ,iBACRC,aAAc,MACdC,OAAQ,YAEVC,SAAWjB,GAAMnB,EAAamB,EAAEkB,OAAOC,OACvCC,UAAQ,KAEVnC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,SAAO,EAAAR,SAAC,qBAS1BF,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAN,SAAA,CACG,KACDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,SAAO,EAACE,QA7E1B,WACEnB,GAAU,EACZ,EA2E6CS,SAAC,yBAGpCC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACG,QA5ElB,WACEjB,GAAS,EACX,EA0EsC4C,WAAS,EAAArC,SAAC,mCAQlD,C","sources":["pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Button, Container, TextArea } from \"semantic-ui-react\";\r\nconst { ethers } = require(\"ethers\");\r\n\r\n// Generate a random 12-word mnemonic\r\n// const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\r\n// console.log(\"Mnemonic:\", mnemonic);\r\n\r\n// // Derive the private key from the mnemonic\r\n// const wallet = ethers.Wallet.fromMnemonic(mnemonic);\r\n// const privateKey = wallet.privateKey;\r\n// console.log(\"Private Key:\", privateKey);\r\n\r\nfunction Home() {\r\n  const [load, setLoading] = useState(false);\r\n  const [create, setCreate] = useState(false);\r\n  const [imprt, setImprt] = useState(false);\r\n  const [seed, setSeed] = useState(null);\r\n  const [inputSeed, setInputSeed] = useState(null);\r\n\r\n  function generate() {\r\n    setLoading(true);\r\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\r\n    setSeed(mnemonic);\r\n    setLoading(false);\r\n  }\r\n\r\n  function createNew() {\r\n    setCreate(true);\r\n  }\r\n\r\n  function importNew() {\r\n    setImprt(true);\r\n  }\r\n\r\n  function checkSeed(e) {\r\n    console.log(inputSeed)\r\n\r\n    e.preventDefault();\r\n    try {\r\n      ethers.utils.HDNode.fromPrivateKey(inputSeed);\r\n      toast.success(\"Correct seed phrase\")\r\n  } catch (error) {\r\n    toast.error(\"Wrong seed phrase\");\r\n    console.log(error);\r\n\r\n  }\r\n\r\n\r\n\r\n  }\r\n  return (\r\n    <Container>\r\n      <ToastContainer />\r\n\r\n      <section className=\"py-5\">\r\n        <div>\r\n          <h1 style={{ fontSize: \"45px\" }}>Welcome to Sypher Wallet</h1>\r\n        </div>\r\n      </section>\r\n\r\n      {create || imprt ? (\r\n        <>\r\n          {create ? (\r\n            <section className=\"mt-2\">\r\n              <div>\r\n                <Button primary loading={load} onClick={generate}>\r\n                  Generate SeedPhrase\r\n                </Button>\r\n\r\n                <h3>Your seedPhrase</h3>\r\n                <h2>{seed}</h2>\r\n              </div>\r\n            </section>\r\n          ) : (\r\n            <section className=\"\">\r\n              <div>\r\n                <form onSubmit={checkSeed}>\r\n                  <TextArea\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100px\",\r\n                      padding: \"5px\",\r\n                      fontSize: \"16px\",\r\n                      border: \"1px solid #ccc\",\r\n                      borderRadius: \"4px\",\r\n                      resize: \"vertical\", // Allow vertical resizing\r\n                    }}\r\n                    onChange={(e) => setInputSeed(e.target.value)}\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <Button primary>Import</Button>\r\n                </form>\r\n\r\n               \r\n              </div>\r\n            </section>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <div>\r\n            <Button primary onClick={createNew}>\r\n              Create a new wallet\r\n            </Button>\r\n            <Button onClick={importNew} secondary>\r\n              Import existing wallet\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default Home;\r\n"],"names":["ethers","require","load","setLoading","useState","create","setCreate","imprt","setImprt","seed","setSeed","inputSeed","setInputSeed","_jsxs","Container","children","_jsx","ToastContainer","className","style","fontSize","_Fragment","Button","primary","loading","onClick","mnemonic","Wallet","createRandom","phrase","onSubmit","e","console","log","preventDefault","utils","HDNode","fromPrivateKey","toast","success","error","TextArea","width","height","padding","border","borderRadius","resize","onChange","target","value","required","secondary"],"sourceRoot":""}